<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>netstandard2.1;net5;net6</TargetFrameworks>
		<Nullable>enable</Nullable>
		<ImplicitUsings>disable</ImplicitUsings>
		<GeneratePackageOnBuild>True</GeneratePackageOnBuild>
		<PackageId>GoWorkPro.CsvBuilder</PackageId>
		<Title>CSV Builder</Title>
		<Authors>Samer Shahbaz </Authors>
		<Company>GoWorkPro</Company>
		<Description>
Very simple and Easy to use, convert Datatables to CSV or CSV to DataTables, Excel to CSV, Read CSV raw string, CSV file, Modification, Set Read Till  Criterias, Build CSV
Author: Samer Shahbaz

Create Date: 15/11/2023

Description:
The CsvBuilder utility, developed by Samer Shahbaz, is a powerful tool designed to simplify the process of creating CSV (Comma-Separated Values) files using .NET DataTables or Customely. This utility provides a convenient and efficient way to generate/read CSV data.

Key Features:
Simplicity: Designed for ease of use, providing a straightforward and user-friendly experience.
Customizable Options: Offers flexibility with customizable processing options for CSV data.
Excel Conversion: Seamlessly converts Excel files to CSV, enhancing data interoperability.
Versatile Construction: Datasets methods and GetValue function accommodate diverse data structures for CSV construction.

Usage Examples:

Constructor:
Static Method for Creating CsvBuilder with Multiple DataTables:
CsvBuilder csvBuilder = CsvBuilder.Datasets(dataTable1, dataTable2, ...);

Building CSV:
csvBuilder.Build(tableIndex1, tableIndex2, ...)
Customizing Value Rendering:

Subscribe to the ValueRenderEvent to define custom parsing logic for column and row values.

Output Handling:
Obtain the CSV content as a Stream:
Stream csvStream = csvBuilder.GetStream();
Save the CSV content to a file:

csvBuilder.SaveAsFile("filePath.csv");

Example #1:

// Create CsvBuilder with a DataSet
ICsvBuilder csvBuilder = CsvBuilder.Datasets(dataSet);

// Build CSV with selected columns from specific DataTables
ICsvExtractor csvExtractor = csvBuilder.Build();

// Obtain CSV content as a Stream
MemoryStream csvStream = csvExtractor.GetStream();

// Save CSV content to a file
csvExtractor.SaveAsFile("output.csv");

//dispose if necessary
csvBuilder.Dispose();
This utility simplifies the process of CSV generation, providing users with a flexible and efficient solution for working with tabular data in the .NET environment.

For More Information See 
https://goworkpro.github.io/CSV-Builder-Utility/
</Description>
		<Copyright>CsvBuilder Utility Â© 2023 Samer Shahbaz. All rights reserved.</Copyright>
		<PackageIcon>csv-icon.png</PackageIcon>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<Version>4.0.1</Version>
		<PackageProjectUrl>https://goworkpro.github.io/CSV-Builder-Utility/</PackageProjectUrl>
		<RepositoryType>git</RepositoryType>
		<RepositoryUrl>https://github.com/GoWorkPro/CSV-Builder.git</RepositoryUrl>
		<PackageReleaseNotes>New Features:

ReadFile Method (WithOptions):

Introduces the ReadFile method, allowing users to read CSV data from a file with specified options for enhanced processing.
ReadFileTill Method:

Adds the ReadFileTill method, enabling users to read CSV data from a file until a specified criteria is met, providing dynamic extraction capabilities.
ToDataTables Method Enhancements:

Enhances the ToDataTables method to accept start and end criteria, facilitating more refined data extraction based on specified criteria.
Introduces an overload with an option to skip rows matching criteria values during DataTable creation.
SetValue and GetValue Methods:

Introduces SetValue and GetValue methods, enabling users to set and retrieve specific cell values in the CSV data with ease.
GetRowValues and SetRow Methods:

Adds GetRowValues and SetRow methods, providing functionalities to retrieve values from and set values for entire rows, enhancing row-level manipulation.
Optimizations:

Implements optimization measures for enhanced performance and efficiency across various methods.
Other Enhancements:

ToString Method Override:

Enhances the ToString method for improved human-readable string representation of the CSV extractor.
ReadExcelFileToCsv and ReadFromText Methods:

Continues to provide functionality for reading CSV data from Excel files and text strings, ensuring compatibility and ease of use.
Note: Please refer to the documentation for detailed information on the usage of new features and optimizations. Upgrade to this version for an improved and more versatile CSV processing experience.</PackageReleaseNotes>
		<PackageTags>CSV, CSV Builder, Dataset, Build Csv, Comman Sperated Values</PackageTags>
	</PropertyGroup>

	<ItemGroup>
		<None Include="..\..\..\..\Desktop\README.md">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
		<None Include="..\..\..\..\Downloads\csv-icon.png">
			<Pack>True</Pack>
			<PackagePath>\</PackagePath>
		</None>
	</ItemGroup>

	<ItemGroup>
	  <PackageReference Include="ClosedXML" Version="0.102.1" />
	  <PackageReference Include="Microsoft.Win32.Registry" Version="5.0.0" />
	  <PackageReference Include="System.Security.Cryptography.ProtectedData" Version="8.0.0" />
	</ItemGroup>

</Project>
